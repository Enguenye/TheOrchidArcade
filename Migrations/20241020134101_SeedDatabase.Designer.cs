// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheOrchidArchade.Context;

#nullable disable

namespace TheOrchidArchade.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241020134101_SeedDatabase")]
    partial class SeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheOrchidArchade.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("Revenue")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.ToTable("games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverImage = "https://i.imgur.com/8pVgqIR.png",
                            Description = "You're a hacker alien trying to escape a giant ariship. Use your knowledge and your abilities to escape this misterious place.Use the arrows to move and z to open your console.",
                            DeveloperId = 1,
                            DownloadUrl = "https://drive.google.com/file/d/13VCHbObQlezmir5Q4e2wFdb-pVE-LC_u/view?usp=drive_link",
                            Genre = "Puzzles",
                            Price = 10.300000000000001,
                            Revenue = 0.0,
                            Title = "Leave"
                        },
                        new
                        {
                            Id = 2,
                            CoverImage = "https://i.imgur.com/LWjv79J.png",
                            Description = "The cascade, your home, has been invaded by monsters . Defeat the monsters and purify the cascade back to its normal state.",
                            DeveloperId = 1,
                            DownloadUrl = "https://drive.google.com/file/d/1kEO_qjonwWC4CIQxBDLAy2qfe1n1gl57/view?usp=drive_link",
                            Genre = "Bullet hell",
                            Price = 0.0,
                            Revenue = 0.0,
                            Title = "Purification"
                        },
                        new
                        {
                            Id = 3,
                            CoverImage = "https://i.imgur.com/sWw7n5u.png",
                            Description = "Explore a haunted house riddled with monsters, puzzles and secrets trying to unravel the mysteries of this place.",
                            DeveloperId = 1,
                            DownloadUrl = "https://drive.google.com/file/d/1VJk1Vq4bvS6INPSuOSu2eF3uJmTxRdgo/view?usp=drive_link",
                            Genre = "Horror",
                            Price = 5.0,
                            Revenue = 0.0,
                            Title = "TheAcumulator"
                        },
                        new
                        {
                            Id = 4,
                            CoverImage = "https://i.imgur.com/ikEFkww.png",
                            Description = "You're a Monkey on a Monocycle",
                            DeveloperId = 1,
                            DownloadUrl = "https://drive.google.com/file/d/1bAt1OLeVvi3Dr5yF6eWzaFXSJLy_YJjM/view?usp=sharing",
                            Genre = "Platformer",
                            Price = 4.0,
                            Revenue = 0.0,
                            Title = "MonoCycle"
                        },
                        new
                        {
                            Id = 5,
                            CoverImage = "https://i.imgur.com/QmpRPyE.png",
                            Description = "The frogs got teleported away from their home. Grow or shrink the objects of the environment to help them get back.",
                            DeveloperId = 2,
                            DownloadUrl = "https://enguenye.itch.io/froggyfreeway",
                            Genre = "Puzzles",
                            Price = 0.0,
                            Revenue = 0.0,
                            Title = "Froggy Freeway"
                        },
                        new
                        {
                            Id = 6,
                            CoverImage = "https://img.itch.zone/aW1nLzEzNzI4MTM2LnBuZw==/original/xZxaEf.png",
                            Description = "The IRS Requisitioned all of your bees! Fight through hordes of government employees in an epic battle of the birds and the bees.",
                            DeveloperId = 2,
                            DownloadUrl = "https://magicow.itch.io/1098-bee",
                            Genre = "Puzzles",
                            Price = 15.6,
                            Revenue = 0.0,
                            Title = "1098-Bee"
                        });
                });

            modelBuilder.Entity("TheOrchidArchade.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Awesome game, I loved the Alien",
                            GameId = 1,
                            Rating = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "Pretty cool concept",
                            GameId = 2,
                            Rating = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "Pretty terrifying",
                            GameId = 3,
                            Rating = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "This game sucks!!!",
                            GameId = 4,
                            Rating = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Was not my cup of tea",
                            GameId = 1,
                            Rating = 2,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("TheOrchidArchade.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 6,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 3,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("TheOrchidArchade.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeveloper")
                        .HasColumnType("bit");

                    b.Property<double?>("revenue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dev1@test.com",
                            Password = "123",
                            Username = "Developer1",
                            isDeveloper = true,
                            revenue = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Email = "dev2@test.com",
                            Password = "123",
                            Username = "Developer2",
                            isDeveloper = true,
                            revenue = 0.0
                        },
                        new
                        {
                            Id = 3,
                            Email = "dev3@test.com",
                            Password = "123",
                            Username = "Developer3",
                            isDeveloper = true,
                            revenue = 0.0
                        },
                        new
                        {
                            Id = 4,
                            Email = "client1@test.com",
                            Password = "123",
                            Username = "Client1",
                            isDeveloper = false,
                            revenue = 0.0
                        },
                        new
                        {
                            Id = 5,
                            Email = "client2@test.com",
                            Password = "123",
                            Username = "Client2",
                            isDeveloper = false,
                            revenue = 0.0
                        },
                        new
                        {
                            Id = 6,
                            Email = "client3@test.com",
                            Password = "123",
                            Username = "Client3",
                            isDeveloper = false,
                            revenue = 0.0
                        });
                });

            modelBuilder.Entity("TheOrchidArchade.Models.Game", b =>
                {
                    b.HasOne("TheOrchidArchade.Models.User", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("TheOrchidArchade.Models.Review", b =>
                {
                    b.HasOne("TheOrchidArchade.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheOrchidArchade.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheOrchidArchade.Models.Transaction", b =>
                {
                    b.HasOne("TheOrchidArchade.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheOrchidArchade.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheOrchidArchade.Models.Game", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
